# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="%APPLICATION_SECRET%"

# The application languages
# ~~~~~
play.i18n.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global


# The application languages
# ~~~~~
play.i18n.langs=["en"]

# The application DI modules
# ~~~~~
play.modules.enabled += "modules.SilhouetteModule"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
#db.default.driver=org.h2.Driver
#db.default.url="jdbc:h2:mem:play"
#db.default.user=sa
#db.default.password=""



# Default database configuration
#slick.dbs.default.driver="slick.driver.H2Driver$"
#slick.dbs.default.db.driver="org.h2.Driver"
#slick.dbs.default.db.url="jdbc:h2:mem:play;MODE=PostgreSQL"
slick.dbs.default.driver="slick.driver.PostgresDriver$"
slick.dbs.default.db.driver="org.postgresql.Driver"
slick.dbs.default.db.url="jdbc:postgresql://localhost/swengs"
slick.dbs.default.db.user="swengs"
slick.dbs.default.db.password="swengs"


testdb = {
  url = "jdbc:h2:mem:test"
  driver = org.h2.Driver
  connectionPool = disabled
  keepAliveConnection = true
}

play.http.errorHandler = "utils.ErrorHandler"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

play.http.filters = "utils.Filters"

play.filters.headers.contentSecurityPolicy="default-src 'self'; img-src 'self' fbcdn-profile-a.akamaihd.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com; style-src 'self' 'unsafe-inline' maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com; font-src 'self' fonts.gstatic.com fonts.googleapis.com maxcdn.bootstrapcdn.com; connect-src 'self' twitter.com *.xing.com"

# CSRF Token Filter Configuration
# ~~~~~
play.filters.csrf.cookie.name="PLAY_CSRF_TOKEN" // We store the CSRF token in a cookie instead of the session so that Angular can read it
play.filters.csrf.contentType.blackList=[ // We would also check AJAX requests from type application/json
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  "text/plain",
  "application/json"
]

include "silhouette.conf"